<!DOCTYPE html>
<html>
<head>
	<% include ../partials/header.ejs %>
	<!--Your own css file-->
	<title>You own title</title>
</head>

<body>
<% include ../partials/headline.ejs %>

<section class="main-content">
	<div class="container-fluid">
		<input id="inputFileToLoad" type="file" onchange="encodeImageFileAsURL();" />
	<div>
</section>


<% include ../partials/script.ejs %>

<!--Your own script-->
<script type='text/javascript'>
	function encodeImageFileAsURL() {
	  var base64Image="";
	  var rootImage="";
  
	  var filesSelected = document.getElementById("inputFileToLoad").files;
	  if (filesSelected.length > 0) {
		var fileToLoad = filesSelected[0];
  
		var fileReader = new FileReader();
  
		fileReader.onload = function(fileLoadedEvent) {
		var srcData = fileLoadedEvent.target.result; // <--- data: base64
		var newImage = document.createElement('img');
		newImage.src = srcData;

		rootImage = newImage.outerHTML;
		base64Image="\""+rootImage.substring(rootImage.indexOf(",")+1,rootImage.length-1);
		alert("Converted Base64 version is " + base64Image);
		console.log(base64Image)

		var xhr = new XMLHttpRequest();
		xhr.open("POST", "https://vision.googleapis.com/v1/images:annotate?key=AIzaSyC1bOumXTVe-xgDQNInDdk_V2xTPnFoie4");
		xhr.setRequestHeader("Content-Type", "application/json");
		xhr.send(JSON.stringify({"requests":[{"image":{"content":""},"features": [{"type":"LABEL_DETECTION","maxResults":1}]}]}));
		//xhr.send(JSON.stringify({"requests":  [{ "features":  [ {"type": "LABEL_DETECTION"}], "image": {"content": encoded}}]}));
		xhr.onload = function() {
			alert(xhr.responseText);
		}
		}
		fileReader.readAsDataURL(fileToLoad);
	  }
	}
  </script>

</body>
</html>